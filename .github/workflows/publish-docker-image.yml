name: Publish Docker image
on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Web
        id: web_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-web

      - name: Build and push Web Docker image
        uses: docker/build-push-action@v6
        with:
          context: web
          push: true
          tags: ${{ steps.web_meta.outputs.tags }}
          labels: ${{ steps.web_meta.outputs.labels }}
        env:
          NODE_ENV: production
      
      - name: Generate artifact attestation for Web
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-web
          subject-digest: ${{ steps.web_meta.outputs.digest }}
          push-to-registry: true

      - name: Extract metadata (tags, labels) for DB
        id: db_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-db

      - name: Build and push DB Docker image
        uses: docker/build-push-action@v6
        with:
          context: db
          push: true
          tags: ${{ steps.db_meta.outputs.tags }}
          labels: ${{ steps.db_meta.outputs.labels }}
      
      - name: Generate artifact attestation for DB
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-db
          subject-digest: ${{ steps.db_meta.outputs.digest }}
          push-to-registry: true
